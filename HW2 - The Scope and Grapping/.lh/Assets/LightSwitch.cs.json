{
    "sourceFile": "Assets/LightSwitch.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1738088713403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738091593513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,8 @@\n     void Start()\r\n     {\r\n         lightComponent = GetComponent<Light>();\r\n \r\n-        if (lightComponent == null)\r\n-        {\r\n-            Debug.LogError(\"No Light component found!\");\r\n-        }\r\n-\r\n         // Enable the input action\r\n         switchAction.action.Enable();\r\n         switchAction.action.performed += ctx => ToggleLight();\r\n     }\r\n"
                },
                {
                    "date": 1738093621776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,30 +3,27 @@\n \r\n public class LightSwitch : MonoBehaviour\r\n {\r\n     private Light lightComponent;\r\n-    private bool isOn = true;\r\n-    \r\n-    public InputActionReference switchAction; \r\n \r\n+    public InputActionReference switchAction; // Assign button in Inspector\r\n+\r\n     void Start()\r\n     {\r\n         lightComponent = GetComponent<Light>();\r\n \r\n         // Enable the input action\r\n         switchAction.action.Enable();\r\n-        switchAction.action.performed += ctx => ToggleLight();\r\n+        switchAction.action.performed += ctx => ChangeLightColor();\r\n     }\r\n \r\n-    void ToggleLight()\r\n+    void ChangeLightColor()\r\n     {\r\n-        isOn = !isOn;\r\n-        lightComponent.enabled = isOn;\r\n+        // Change the light to a random color\r\n         lightComponent.color = new Color(Random.value, Random.value, Random.value);\r\n     }\r\n \r\n     void OnDestroy()\r\n     {\r\n-        // Unsubscribe to prevent memory leaks\r\n-        switchAction.action.performed -= ctx => ToggleLight();\r\n+        switchAction.action.performed -= ctx => ChangeLightColor();\r\n     }\r\n }\r\n"
                }
            ],
            "date": 1738088713403,
            "name": "Commit-0",
            "content": "using UnityEngine;\r\nusing UnityEngine.InputSystem;\r\n\r\npublic class LightSwitch : MonoBehaviour\r\n{\r\n    private Light lightComponent;\r\n    private bool isOn = true;\r\n    \r\n    public InputActionReference switchAction; \r\n\r\n    void Start()\r\n    {\r\n        lightComponent = GetComponent<Light>();\r\n\r\n        if (lightComponent == null)\r\n        {\r\n            Debug.LogError(\"No Light component found!\");\r\n        }\r\n\r\n        // Enable the input action\r\n        switchAction.action.Enable();\r\n        switchAction.action.performed += ctx => ToggleLight();\r\n    }\r\n\r\n    void ToggleLight()\r\n    {\r\n        isOn = !isOn;\r\n        lightComponent.enabled = isOn;\r\n        lightComponent.color = new Color(Random.value, Random.value, Random.value);\r\n    }\r\n\r\n    void OnDestroy()\r\n    {\r\n        // Unsubscribe to prevent memory leaks\r\n        switchAction.action.performed -= ctx => ToggleLight();\r\n    }\r\n}\r\n"
        }
    ]
}